"""init

Revision ID: 48e0ab5941fc
Revises: 
Create Date: 2023-10-16 18:22:37.026689

"""
from typing import Sequence, Union
import sqlmodel

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '48e0ab5941fc'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('course',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column(
                        'name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column(
                        'color', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('fontDark', sa.Boolean(), nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name')
                    )
    op.create_table('user',
                    sa.Column(
                        'username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column(
                        'full_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column(
                        'role', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('hashed_password',
                              sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('username')
                    )
    op.create_table('project',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column(
                        'uuid', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column(
                        'name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(),
                              nullable=False),
                    sa.Column('owner_id', sa.Integer(), nullable=False),
                    sa.Column('computation_time', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('uuid')
                    )
    op.create_table('usercourselink',
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('course_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
                    sa.PrimaryKeyConstraint('user_id', 'course_id')
                    )
    op.create_table('homework',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('course_id', sa.Integer(), nullable=True),
                    sa.Column('template_project_id',
                              sa.Integer(), nullable=True),
                    sa.Column('original_project_id',
                              sa.Integer(), nullable=True),
                    sa.Column('deadline', sqlmodel.sql.sqltypes.AutoString(),
                              nullable=False),
                    sa.Column('solution_project_id',
                              sa.Integer(), nullable=True),
                    sa.Column('solution_start_showing',
                              sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
                    sa.ForeignKeyConstraint(
                        ['original_project_id'], ['project.id'], ),
                    sa.ForeignKeyConstraint(
                        ['solution_project_id'], ['project.id'], ),
                    sa.ForeignKeyConstraint(
                        ['template_project_id'], ['project.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('template_project_id')
                    )
    op.create_table('editinghomework',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('homework_id', sa.Integer(), nullable=True),
                    sa.Column('owner_id', sa.Integer(), nullable=True),
                    sa.Column('submission', sqlmodel.sql.sqltypes.AutoString(),
                              nullable=True),
                    sa.Column('number_of_compilations',
                              sa.Integer(), nullable=True),
                    sa.Column('number_of_runs', sa.Integer(), nullable=True),
                    sa.Column('number_of_tests', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['homework_id'], ['homework.id'], ),
                    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('editinghomework')
    op.drop_table('homework')
    op.drop_table('usercourselink')
    op.drop_table('project')
    op.drop_table('user')
    op.drop_table('course')
    # ### end Alembic commands ###
